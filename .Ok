local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()

local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()



local workspace = game:GetService("Workspace")

local players = game:GetService("Players")

local replicatedStorage = game:GetService("ReplicatedStorage")

local localPlayer = players.LocalPlayer

local BASE_THRESHOLD = 0.2

local VELOCITY_SCALING_FACTOR_FAST = 0.05

local VELOCITY_SCALING_FACTOR_SLOW = 0.1

local IMMEDIATE_PARRY_DISTANCE = 12
local IMMEDIATE_HIGH_VELOCITY_THRESHOLD = 85

local UserInputService = game:GetService("UserInputService")

local heartbeatConnection

local focusedBall, displayBall = nil, nil

local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

local ballsFolder = workspace:WaitForChild("Balls")

local parryButtonPress = replicatedStorage.Remotes.ParryButtonPress

local abilityButtonPress = replicatedStorage.Remotes.AbilityButtonPress

local sliderValue = 25

local distanceVisualizer = nil

local isRunning = false

local notifyparried = false

local PlayerGui = localPlayer:WaitForChild("PlayerGui")

local Hotbar = PlayerGui:WaitForChild("Hotbar")

local UseRage = false





local function onCharacterAdded(newCharacter)

    character = newCharacter

    abilitiesFolder = character:WaitForChild("Abilities")

end



localPlayer.CharacterAdded:Connect(onCharacterAdded)






local Window = Fluent:CreateWindow({

    Title = "OMG Hub",

    SubTitle = "By Omg",

    TabWidth = 160,

    Size = UDim2.fromOffset(580, 460),

    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely

    Theme = "Dark",

    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind

})



--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional

local Tabs = {

    AutoParry = Window:AddTab({ Title = "Combat", Icon = "" })

}



if character then

    print("Character found | OMG Hub")

else

    print("Character not found | OMG Hub")

    return

end

 

 local function chooseNewFocusedBall()

    local balls = ballsFolder:GetChildren()

    for _, ball in ipairs(balls) do

        if ball:GetAttribute("realBall") ~= nil and ball:GetAttribute("realBall") == true then

            focusedBall = ball

            print(focusedBall.Name)

            break

        elseif ball:GetAttribute("target") ~= nil then

            focusedBall = ball

            print(focusedBall.Name)

            break

        end

    end

    

    if focusedBall == nil then

        print("Debug: Could not find a ball that's the realBall or has a target")

        wait(1)

        chooseNewFocusedBall()

    end

    return focusedBall

end



local function getDynamicThreshold(ballVelocityMagnitude)

    if ballVelocityMagnitude > 60 then

        return math.max(0.20, BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_FAST))

    else

        return math.min(0.01, BASE_THRESHOLD + (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_SLOW))

    end

end



local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)

    if not character then return end

    local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit

    local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)

    

    if velocityTowardsPlayer <= 0 then

        return math.huge

    end

    

    return (distanceToPlayer - sliderValue) / velocityTowardsPlayer

end



local function updateDistanceVisualizer()

    local charPos = character and character.PrimaryPart and character.PrimaryPart.Position

    if charPos and focusedBall then

        if distanceVisualizer then

            distanceVisualizer:Destroy()

        end



        local timeToImpactValue = timeUntilImpact(focusedBall.Velocity, (focusedBall.Position - charPos).Magnitude, character.PrimaryPart.Velocity)

        local ballFuturePosition = focusedBall.Position + focusedBall.Velocity * timeToImpactValue



        distanceVisualizer = Instance.new("Part")

        distanceVisualizer.Size = Vector3.new(1, 1, 1)

        distanceVisualizer.Anchored = true

        distanceVisualizer.CanCollide = false

        distanceVisualizer.Position = ballFuturePosition

        distanceVisualizer.Parent = workspace    

    end

end



local function checkIfTarget()

    for _, v in pairs(ballsFolder:GetChildren()) do

        if v:IsA("Part") and v.BrickColor == BrickColor.new("Really red") then 

            print("Ball is targetting player | OMG Hub")

            return true 

        end 

    end 

    return false

end



local function isCooldownInEffect(uigradient)

    return uigradient.Offset.Y < 0.5

end





local function checkBallDistance()

    if not character or not checkIfTarget() then return end



    local charPos = character.PrimaryPart.Position

    local charVel = character.PrimaryPart.Velocity



    if focusedBall and not focusedBall.Parent then

        print("Focused ball lost parent, choosing a new focused ball | OMG Hub")

        chooseNewFocusedBall()

    end

    if not focusedBall then 

        print("No focused ball | OMG Hub")

        chooseNewFocusedBall()

    end



    local ball = focusedBall

    local distanceToPlayer = (ball.Position - charPos).Magnitude

    local ballVelocityTowardsPlayer = ball.Velocity:Dot((charPos - ball.Position).Unit)

    

    if distanceToPlayer < 13 then

        parryButtonPress:Fire()

        task.wait()

    end



    if timeUntilImpact(ball.Velocity, distanceToPlayer, charVel) < getDynamicThreshold(ballVelocityTowardsPlayer) then

        if (character.Abilities["Raging Deflection"].Enabled or character.Abilities["Rapture"].Enabled) and UseRage == true then

            if not isCooldownInEffect(uigrad2) then

                abilityButtonPress:Fire()

            end



            if isCooldownInEffect(uigrad2) and not isCooldownInEffect(uigrad1) then

                parryButtonPress:Fire()

                if notifyparried == true then

                    local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()

                    local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

                    local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Manually Parried Ball!",

                        Duration = 1,

                        Icon = "rbxassetid://14467433545"

                    })

                end

            end



        elseif not isCooldownInEffect(uigrad1) then

            print(isCooldownInEffect(uigrad1))

            parryButtonPress:Fire()

            if notifyparried == true then

                local StarterGui = game:GetService("StarterGui")

                StarterGui:SetCore("SendNotification", {

                    Title = "OMG Hub",

                    Text = "Automatically Parried Ball!",

                    Duration = 1,

                    Icon = "rbxassetid://14467433545"

                })

            end

            task.wait(0.3)

        end

    end

end





local function autoParryCoroutine()

    while isRunning do

        checkBallDistance()

        updateDistanceVisualizer()

        task.wait()

    end

end







localPlayer.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    chooseNewFocusedBall()

    updateDistanceVisualizer()

end)



localPlayer.CharacterRemoving:Connect(function()

    if distanceVisualizer then

        distanceVisualizer:Destroy()

        distanceVisualizer = nil

    end

end)







local function startAutoParry()

    print("Started Auto Parry | OMG Hub")

    

    chooseNewFocusedBall()

    

    isRunning = true

    local co = coroutine.create(autoParryCoroutine)

    coroutine.resume(co)

end



local function stopAutoParry()

    isRunning = false

end



local parryon = false

local autoparrydistance = 12


 



local Debug = false -- Set this to true if you want my debug output.



local ReplicatedStorage = game:GetService("ReplicatedStorage")



local Players = game:GetService("Players")





local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()



local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9) -- A second argument in waitforchild what could it mean?



local Balls = workspace:WaitForChild("Balls", 9e9)





-- Functions





local function print(...) -- Debug print.



        if Debug then



                warn(...)



        end



end





local function VerifyBall(Ball) -- Returns nil if the ball isn't a valid projectile; true if it's the right ball.



        if typeof(Ball) == "Instance" and Ball:IsA("BasePart") and Ball:IsDescendantOf(Balls) and Ball:GetAttribute("realBall") == true then



                return true



        end



end





local function IsTarget() -- Returns true if we are the current target.



        return (Player.Character and Player.Character:FindFirstChild("Highlight"))



end





local function Parry() -- Parries.



        ReplicatedStorage.Remotes.ParryButtonPress:Fire()



end





-- The actual code





Balls.ChildAdded:Connect(function(Ball)



        if not VerifyBall(Ball) then



                return



        end



        



        print(`Ball Spawned: {Ball}`)



        



        local OldPosition = Ball.Position



        local OldTick = tick()



        



        Ball:GetPropertyChangedSignal("Position"):Connect(function()



                if IsTarget() then -- No need to do the math if we're not being attacked.



                        local Distance = (Ball.Position - workspace.CurrentCamera.Focus.Position).Magnitude



                        local Velocity = (OldPosition - Ball.Position).Magnitude -- Fix for .Velocity not working. Yes I got the lowest possible grade in accuplacer math.



                        



                        print(`Distance: {Distance}\nVelocity: {Velocity}\nTime: {Distance / Velocity}`)



                



                        if (Distance / Velocity) <= autoparrydistance then -- Sorry for the magic number. This just works. No, you don't get a slider for this because it's 2am.

if parryon == true then

                                Parry()



                        end



                end



end

                



                if (tick() - OldTick >= 1/60) then -- Don't want it to update too quickly because my velocity implementation is aids. Yes, I tried Ball.Velocity. No, it didn't work.



                        OldTick = tick()



                        OldPosition = Ball.Position



                end



        end)



end)



local UserInputService = game:GetService("UserInputService")



local parryon1 = false

local LocalPlayer = game:GetService("Players")

local Balls1 = workspace:WaitForChild("Balls")



local IsTargeted = false

local CanHit = false



function VerifyBall1()

local RealBall

for i, v in pairs(Balls1:GetChildren()) do

        if v:GetAttribute("realBall") == true then

  RealBall = v

        end

        end

    return RealBall

  end

  

function IsTarget1()

    return (Player.Character and Player.Character:FindFirstChild("Highlight"))



end



function DetectBall()

    local Ball = VerifyBall1()

    

  	if Ball then

        local BallVelocity = Ball.Velocity.Magnitude

        local BallPosition = Ball.Position

  

        local PlayerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

  

        local Distance = (BallPosition - PlayerPosition).Magnitude

        local PingAccountability = BallVelocity * (game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000)

  

        Distance -= PingAccountability

        Distance -= 3.7

  

        local Hit = Distance / BallVelocity

  

        if Hit <= 0.5 then

            return true

        end

    end

    return false

end



function DeflectBall()

    if IsTargeted and DetectBall() then

    if parryon1 == true then

            ReplicatedStorage.Remotes.ParryButtonPress:Fire()

end

end

end



game:GetService('RunService').PostSimulation:Connect(function()

    IsTargeted = IsTarget1()

        DeflectBall()

end)



local Options = Fluent.Options





local ToggleAutoParryOp = Tabs.AutoParry:AddToggle("MyToggle", {Title = "Auto Parry V3", Default = false })



ToggleAutoParryOp:OnChanged(function(Value)

if Value then

parryon1 = true

            local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Auto Parry V3 has been started!",

                Duration = 3,

            })

        else

            parryon1 = false

            local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Auto Parry V3 has been disabled!",

                Duration = 3,

            })

        end

    end)



local AutoFarmToggle = Tabs.AutoParry:AddToggle("MyToggle", {Title = "Auto Detect Spam", Default = false })

    

     Description = "Use With Auto Parry V3",

    

    AutoFarmToggle:OnChanged(function(Value)

    if Value then

    local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Auto Detect Spam has been started!",

                Duration = 3,

            })

    local function get_plr()

  return game.Players.LocalPlayer

end



local function get_plrChar()

  local plrChar = get_plr().Character

  if plrChar then

    return plrChar

  end

end



local function get_plrRP()

  local plrRP = get_plrChar():FindFirstChild("HumanoidRootPart")

  if plrRP then

    return plrRP

  end

end



local function playerJump()

  pcall(function()

    game.Players.LocalPlayer.Character.Humanoid.Jump = true

  end)

end



local function get_PlayersNumber()

  local Alive = workspace:WaitForChild("Alive", 20):GetChildren()

  local PlayersNumber = 0

  for _,v in pairs(Alive) do

    if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 50 then

      PlayersNumber = PlayersNumber + 1

    end

  end

  return PlayersNumber

end



local function get_ProxyPlayer()

  local Players = workspace:WaitForChild("Alive"):GetChildren()

  local Distance = math.huge

  local plr = game.Players.LocalPlayer

  local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")

  local Player = nil

  

  for _,plr1 in pairs(Players) do

    if plr1.Name ~= plr.Name and plrRP and plr1:FindFirstChild("HumanoidRootPart") and plr1:FindFirstChild("Humanoid") and plr1.Humanoid.Health > 50 then

      local magnitude = (plr1.HumanoidRootPart.Position - plrRP.Position).Magnitude

      if magnitude <= Distance then

        Distance = magnitude

        Player = plr1

      end

    end

  end

  return Player

end



local function Click_Button()

  task.spawn(function()

    local plr = game.Players.LocalPlayer

    local plrFind = workspace.Alive:FindFirstChild(plr.Name)

    if plrFind then

      local plrs = 0

      for _,v in pairs(workspace:WaitForChild("Alive", 10):GetChildren()) do

        plrs = plrs + 1

      end

      if plrs > 1 then
       local args = {

        [1] = 1.5,

        [2] = CFrame.new(-254.2939910888672, 112.13581848144531, -119.27256774902344) * CFrame.Angles(-2.029526710510254, 0.5662040710449219, 2.314905881881714),

        [3] = {

          ["2617721424"] = Vector3.new(-273.400146484375, -724.8031005859375, -20.92414093017578),

        },

        [4] = {

          [1] = 910,

          [2] = 154

        }

      }

      game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))
      end

    end

  end)

end



task.spawn(function()

  while wait() do

    if getgenv().SpamClickA then

      Click_Button()

    end

  end

end)



local function DetectSpam()

  local Balls = workspace:WaitForChild("Balls", 20)

  

  local OldPos = Vector3.new()

  local OldTick1 = tick()

  

  local OldBall = Balls

  local TargetPlayer = ""

  local SpamNum = 0

  local BallSpeed = 0

  local BallDistance = 0

  

  task.spawn(function()

    local OldTick = tick()

    local OldPos = Vector3.new()

    while getgenv().DetectSpam do task.wait()

      local plrRP = get_plrRP()

      local Ball = Balls:FindFirstChildOfClass("Part")

      if plrRP and Ball then

        BallDistance = (plrRP.Position - Ball.Position).Magnitude

        BallSpeed = (OldPos - Ball.Position).Magnitude

        if tick() - OldTick >= 1/60 then

          OldTick = tick()

          OldPos = Ball.Position

        end

      end

    end

  end)

  

  while getgenv().DetectSpam do task.wait()

    local Ball = Balls:FindFirstChildOfClass("Part")

    local plrRP = get_plrRP()

    local ProxyPlayer = get_ProxyPlayer()

    

    if not Ball then

      getgenv().SpamClickA = false

    end

  

    if Ball and Ball:GetAttribute("realBall") and OldBall ~= Ball then

    

      Ball.Changed:Connect(function()task.wait()

        local Ball = Balls:FindFirstChildOfClass("Part")

        

        if Ball then

          TargetPlayer = Ball:GetAttribute("target")

          

          if ProxyPlayer and TargetPlayer == ProxyPlayer.Name or get_plr() and TargetPlayer == get_plr().Name then

            SpamNum = SpamNum + 1

          else

            SpamNum = 0

          end

          

          local args = ProxyPlayer and ProxyPlayer:FindFirstChild("HumanoidRootPart")

          local HL1 = ProxyPlayer and ProxyPlayer:FindFirstChild("Highlight")

          local HL2 = get_plrChar() and get_plrChar():FindFirstChild("Highlight")

          

          if plrRP and HL1 and args or plrRP and HL2 and args then

            local DistancePlayer = (ProxyPlayer.HumanoidRootPart.Position - plrRP.Position).Magnitude

            local DistanceBall = (Ball.Position - plrRP.Position).Magnitude

            

            if get_PlayersNumber() < 3 then

              if DistancePlayer <= 10.5 and DistanceBall <= 0.9 and SpamNum >= 2 then

                getgenv().SpamClickA = true

              else

                getgenv().SpamClickA = false

              end

            else

              if DistancePlayer <= 10.5 and DistanceBall <=  0.9 and SpamNum >= 3 then

                getgenv().SpamClickA = true

              else

                getgenv().SpamClickA = false

              end

            end

          else

            getgenv().SpamClickA = false

          end

        end

      end)

      OldBall = Ball

    end

  end

end



getgenv().DetectSpam = true

DetectSpam()

    end

        if not Value then

            local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Auto Detect Spam has been disabled!",

                        Duration = 3,

                    })

        end

    end)



local Slider = Tabs.AutoParry:AddSlider("Slider", {

        Title = "Distance Configuration",

        Description = "For Auto Parry V3, 11 is Good",

        Default = 11,

        Min = 5,

        Max = 50,

        Rounding = 0,

        Callback = function(Value)

            autoparrydistance = Value

        end

    })




local ToggleAutoFarm = Tabs.AutoParry:AddToggle("MyToggle", {Title = "Auto Look to Ball", Default = false })



ToggleAutoFarm:OnChanged(function(Value)

if Value then

            local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Auto Look to Ball has been started!",

                        Duration = 3,

                    })

            getgenv().god = true

while getgenv().god and task.wait() do

for _,ball in next, workspace.Balls:GetChildren() do
        if ball then
            if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, ball.Position)
                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Highlight") then
              end

          end

       end

    end

end

        end

        if not Value then

            getgenv().god = false

            local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Auto Look to Ball has been disabled!",

                        Duration = 3,

                    })

        end

    end)

    



local ToggleAutoFarm = Tabs.AutoParry:AddToggle("MyToggle", {Title = "Auto Tp to Ball", Default = false })



ToggleAutoFarm:OnChanged(function(Value)

if Value then

            local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Auto Tp has been started!",

                        Duration = 3,

                    })

            getgenv().god = true

while getgenv().god and task.wait() do

    for _,ball in next, workspace.Balls:GetChildren() do

        if ball then

            if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then

                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, ball.Position)

                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame * CFrame.new(0, -28, (ball.Velocity).Magnitude * -0.5)

                                       if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Highlight") then

              end

          end

       end

    end

end

        end

        if not Value then

            getgenv().god = false

            local StarterGui = game:GetService("StarterGui")

                    StarterGui:SetCore("SendNotification", {

                        Title = "OMG Hub",

                        Text = "Auto Tp has been disabled!",

                        Duration = 3,

                    })

        end

    end)

    

    local AutoFarmToggle = Tabs.AutoParry:AddToggle("MyToggle", {Title = "Auto Tp to Security Place", Default = false })

    

     Description = "Use With Auto Parry V3",

    

    AutoFarmToggle:OnChanged(function(Value)

    if Value then

    getgenv().stop = false

 

while game:GetService("RunService").RenderStepped:wait() do

   if not getgenv().stop then

       game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-287, 239, 154)
   else

       break

   end

end

end

if not Value then

getgenv().stop = true

end

end)

    

    Tabs.AutoParry:AddButton({

        Title = "FPS Boost",

        Description = "hello",

        Callback = function()

        local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Executed!!",

                Duration = 3,

            })

          loadstring(game:HttpGet("https://pastebin.com/raw/RUr10TJ0"))()
        end

    })

    
    Tabs.AutoParry:AddButton({

        Title = "Spam Gui",

        Description = "Use With Auto Parry V3 or Tp to Ball",

        Callback = function()

        local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Only use if you is close to the enemy",

                Duration = 3,

            })

          local gui = Instance.new("ScreenGui")

  gui.ResetOnSpawn = false

  gui.Parent = game.CoreGui

  

  local frame = Instance.new("Frame")

  frame.Position = UDim2.new(0, 20, 0, 20)

  frame.Size = UDim2.new(0, 100, 0, 50)

  frame.BackgroundColor3 = Color3.new(0, 0, 0)

  frame.BorderSizePixel = 0

  frame.Parent = gui

  

  local button = Instance.new("TextButton")

  button.Text = "Enable"

  button.Size = UDim2.new(1, -10, 1, -10)

  button.Position = UDim2.new(0, 10, 0, 10)

  button.BackgroundColor3 = Color3.new(1, 1, 1)

  button.BorderColor3 = Color3.new(0, 0, 0)

  button.BorderSizePixel = 2

  button.Font = Enum.Font.SourceSans

  button.TextColor3 = Color3.new(0, 0, 0)

  button.TextSize = 16

  button.Parent = frame

  

  local activated = false

  

  local function toggle()

    activated = not activated

    button.Text = activated and "Disable" or "Enable"

    while activated do

      local args = {

        [1] = 1.5,

        [2] = CFrame.new(-254.2939910888672, 112.13581848144531, -119.27256774902344) * CFrame.Angles(-2.029526710510254, 0.5662040710449219, 2.314905881881714),

        [3] = {

          ["2617721424"] = Vector3.new(-273.400146484375, -724.8031005859375, -20.92414093017578),

        },

        [4] = {

          [1] = 910,

          [2] = 154

        }

      }

      game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))

      game:GetService("RunService").Heartbeat:Wait(0.000001)

    end

  end

  

  button.MouseButton1Click:Connect(toggle)

  



  local UserInputService = game:GetService("UserInputService")

  local eKeyPressed = false

  

  UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)

    if input.KeyCode == Enum.KeyCode.E and not gameProcessedEvent then

      eKeyPressed = true

      toggle()

    end

  end)

  

  UserInputService.InputEnded:Connect(function(input, gameProcessedEvent)

    if input.KeyCode == Enum.KeyCode.E then

      eKeyPressed = false

    end

  end)

        end

    })

    

    

    

    Tabs.AutoParry:AddButton({

        Title = "Hold Block to Spam",

        Description = "Enable Auto Parry V3",

        Callback = function()

        local StarterGui = game:GetService("StarterGui")

            StarterGui:SetCore("SendNotification", {

                Title = "OMG Hub",

                Text = "Executed!!",

                Duration = 3,

            })

          getgenv().SpamSpeed = 0.9

loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3ABlade%20Ball%20Spam",true))()

        end

    })

    

  



-- Addons:

-- SaveManager (Allows you to have a configuration system)

-- InterfaceManager (Allows you to have a interface managment system)



-- Hand the library over to our managers

SaveManager:SetLibrary(Fluent)

InterfaceManager:SetLibrary(Fluent)



-- Ignore keys that are used by ThemeManager.

-- (we dont want configs to save themes, do we?)

SaveManager:IgnoreThemeSettings()



-- You can add indexes of elements the save manager should ignore

SaveManager:SetIgnoreIndexes({})



-- use case for doing it this way:

-- a script hub could have themes in a global folder

-- and game configs in a separate folder per game

InterfaceManager:SetFolder("FluentScriptHub")

SaveManager:SetFolder("FluentScriptHub/specific-game")









Window:SelectTab(1)



Fluent:Notify({

    Title = "OMG Hub",

    Content = "The script has been loaded.",

    Duration = 8

})



-- You can use the SaveManager:LoadAutoloadConfig() to load a config

-- which has been marked to be one that auto loads!

SaveManager:LoadAutoloadConfig()localPlayer.CharacterAdded:Connect(onCharacterAdded)

